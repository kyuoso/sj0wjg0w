local webhookcheck =
	is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
	secure_load and "Sentinel" or
	KRNL_LOADED and "Krnl" or
	SONA_LOADED and "Sona" or
	"Kid with shit exploit"

local url = _G.Webhook
local Player = game.Players.LocalPlayer

Player.Chatted:Connect(function(msg)
	local data = {
		["username"] = Player.DisplayName .. " (@" .. Player.Name .. ")",
		["avatar_url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=".. tostring(Player.UserId) .."&width=420&height=420&format=png",
		["content"] = msg,
		["allowed_mentions"] = {
			["parse"] = ""
		}
	}

	local newdata = game:GetService("HttpService"):JSONEncode(data)

	local headers = {
		["content-type"] = "application/json"
	}

	request = http_request or request or HttpPost or syn.request

	local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}

	request(abcdef)
end)

game.Players.PlayerRemoving:Connect(function(player)
	local player = game.Players.LocalPlayer
	local data = {

		["username"] = player.Name,
		["avatar_url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=".. tostring(player.UserId) .."&width=420&height=420&format=png",
		["content"] = "",

		["embeds"] = {
			{

				["color"] = tonumber(0x161313),
				["type"] = "rich",
				
				["author"] = {
					["name"] = player.DisplayName .. " (@" .. player.Name .. ")",
					["url"] = "",
					["icon_url"] = "",
				},
				
				["title"] = encode(player.Name),
				["url"] = "https://www.roblox.com/users/" .. tostring(player.UserId) .. "/profile",
				["description"] = "**" .. player.DisplayName .. "** (@" .. player.DisplayName .. ")** left the game?? :scream: :scream:",
				["thumbnail"] = {
					["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" .. tostring(player.Name)
				},

				["footer"] = {
					["text"] = "Time: " .. tostring(date) .. " at " .. tostring(timestamp)
				}

			}
		}

	}

	local newdata = game:GetService("HttpService"):JSONEncode(data)

	local headers = {
		["content-type"] = "application/json"
	}

	request = http_request or request or HttpPost or syn.request

	local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}

	request(abcdef)
end)
